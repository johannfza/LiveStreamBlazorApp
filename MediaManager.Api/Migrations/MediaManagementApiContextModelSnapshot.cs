// <auto-generated />
using MediaManager.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MediaManager.Api.Migrations
{
    [DbContext(typeof(MediaManagementApiContext))]
    partial class MediaManagementApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MediaModels.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectionId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("MediaModels.LiveStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DatePublished")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LiveStream");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatePublished = "23/05/2020 18:12:45",
                            Description = "This is Live Stream 1",
                            StreamKey = "key1",
                            Title = "LiveStream 1",
                            Url = "http://www.golive.com/1",
                            Views = 0
                        },
                        new
                        {
                            Id = 2,
                            DatePublished = "23/05/2020 18:12:45",
                            Description = "This is Live Stream 2",
                            StreamKey = "key2",
                            Title = "LiveStream 2",
                            Url = "http://www.golive.com/2",
                            Views = 0
                        },
                        new
                        {
                            Id = 3,
                            DatePublished = "23/05/2020 18:12:45",
                            Description = "This is Live Stream 3",
                            StreamKey = "key3",
                            Title = "LiveStream 3",
                            Url = "http://www.golive.com/3",
                            Views = 0
                        },
                        new
                        {
                            Id = 4,
                            DatePublished = "23/05/2020 18:12:45",
                            Description = "This is Live Stream 4",
                            StreamKey = "key4",
                            Title = "LiveStream 4",
                            Url = "http://www.golive.com/4",
                            Views = 0
                        });
                });

            modelBuilder.Entity("MediaModels.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MediaModels.UserConnection", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "ConnectionId");

                    b.HasIndex("ConnectionId");

                    b.ToTable("UserConnections");
                });

            modelBuilder.Entity("MediaModels.UserConnection", b =>
                {
                    b.HasOne("MediaModels.Connection", "Connection")
                        .WithMany("UserConnections")
                        .HasForeignKey("ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaModels.User", "User")
                        .WithMany("Connections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
